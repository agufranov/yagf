!function n(t,r,e){function u(l,i){if(!r[l]){if(!t[l]){var c="function"==typeof require&&require;if(!i&&c)return c(l,!0);if(o)return o(l,!0);var f=new Error("Cannot find module '"+l+"'");throw f.code="MODULE_NOT_FOUND",f}var a=r[l]={exports:{}};t[l][0].call(a.exports,function(n){var r=t[l][1][n];return u(r?r:n)},a,a.exports,n,t,r,e)}return r[l].exports}for(var o="function"==typeof require&&require,l=0;l<e.length;l++)u(e[l]);return u}({1:[function(n,t,r){n("./modules/module"),n("./modules/prelude"),console.log(1)},{"./modules/module":2,"./modules/prelude":3}],2:[function(n,t,r){console.log("module_module")},{}],3:[function(n,t,r){var e,u,o,l,i,c,f,a,s,h,p,g,v,d,j,b,m,M,O,y,x,S,q,w,k,I,W,z,N,_,A,E,L,P,D,T,U,B,C,F,G,H,J,K,Q,R,V,X,Y,Z,$,nn,tn,rn,en,un,on,ln,cn,fn,an,sn,hn,pn,gn,vn,dn,jn,bn,mn,Mn,On,yn,xn,Sn,qn,wn,kn,In,Wn,zn,Nn,_n,An,En,Ln,Pn,Dn,Tn,Un,Bn,Cn,Fn,Gn,Hn,Jn,Kn,Qn,Rn,Vn,Xn,Yn,Zn,$n,nt,tt,rt,et,ut,ot,lt,it,ct,ft,at,st,ht,pt,gt,vt,dt,jt,bt,mt=[].indexOf||function(n){for(var t=0,r=this.length;r>t;t++)if(t in this&&this[t]===n)return t;return-1},Mt=[].slice,Ot={}.hasOwnProperty;n("./submodules/submodule.coffee"),it={}.toString,e={},e.typeOf=function(n){return it.call(n).slice(8,-1)},e.toMap=ot=function(n){return function(t){return n[t]}},e.each=k=function(n,t){var r,e,u,o;if("[object Object]"===it.call(n))for(e in n)o=n[e],t(o);else for(r=0,u=n.length;u>r;r++)o=n[r],t(o);return n},e.map=cn=function(n,t){var r,e,u,o,l;if(o=it.call(n),"[object Object]"===o){e={};for(r in n)l=n[r],e[r]=t(l);return e}return u=function(){var r,e,u;for(u=[],r=0,e=n.length;e>r;r++)l=n[r],u.push(t(l));return u}(),"[object String]"===o?u.join(""):u},e.filter=E=function(n,t){var r,e,u,o;if(u=it.call(n),"[object Object]"===u){e={};for(r in n)o=n[r],t(o)&&(e[r]=o);return e}return e=function(){var r,e,u;for(u=[],r=0,e=n.length;e>r;r++)o=n[r],t(o)&&u.push(o);return u}(),"[object String]"===u?e.join(""):e},e.reject=An=function(n,t){var r,e,u,o;if(u=it.call(n),"[object Object]"===u){e={};for(r in n)o=n[r],t(o)||(e[r]=o);return e}return e=function(){var r,e,u;for(u=[],r=0,e=n.length;e>r;r++)o=n[r],t(o)||u.push(o);return u}(),"[object String]"===u?e.join(""):e},e.partition=xn=function(n,t){var r,e,u,o,l,i,c;if(i=it.call(n),"[object Object]"===i){l={},r={};for(u in n)c=n[u],(t(c)?l:r)[u]=c}else{for(l=[],r=[],e=0,o=n.length;o>e;e++)c=n[e],(t(c)?l:r).push(c);"[object String]"===i&&(l=l.join(""),r=r.join(""))}return[l,r]},e.find=L=function(n,t){var r,e,u,o;if("[object Object]"===it.call(n)){for(e in n)if(o=n[e],t(o))return o}else for(r=0,u=n.length;u>r;r++)if(o=n[r],t(o))return o},e.pluck=wn=function(n,t){var r,e,u,o,l,i;if("[object Object]"===it.call(t)){o={};for(e in t)i=t[e],null!=i[n]&&(o[e]=i[n]);return o}for(l=[],r=0,u=t.length;u>r;r++)i=t[r],null!=i[n]&&l.push(i[n]);return l},e.head=Q=e.first=P=function(n){return n.length?n[0]:void 0},e.tail=$n=function(n){return n.length?n.slice(1):void 0},e.last=nn=function(n){return n.length?n[n.length-1]:void 0},e.initial=V=function(n){return n.length?n.slice(0,-1):void 0},e.empty=W=function(n){var t;if("[object Object]"===it.call(n)){for(t in n)return!1;return!0}return!n.length},e.values=pt=function(n){var t,r,e;r=[];for(t in n)e=n[t],r.push(e);return r},e.keys=$=function(n){var t,r;t=[];for(r in n)t.push(r);return t},e.len=rn=function(n){return"[object Object]"===it.call(n)&&(n=pt(n)),n.length},e.cons=O=function(n,t){return"[object String]"===it.call(t)?n+t:[n].concat(t)},e.append=f=function(n,t){return"[object String]"===it.call(t)?n+t:n.concat(t)},e.join=Z=function(n,t){return"[object Object]"===it.call(t)&&(t=pt(t)),t.join(n)},e.reverse=Pn=function(n){return"[object String]"===it.call(n)?n.split("").reverse().join(""):n.slice().reverse()},e.fold=B=e.foldl=F=function(n,t,r){var e,u,o,l;if("[object Object]"===it.call(t))for(u in t)l=t[u],n=r(n,l);else for(e=0,o=t.length;o>e;e++)l=t[e],n=r(n,l);return n},e.fold1=C=e.foldl1=G=function(n,t){return B(n[0],n.slice(1),t)},e.foldr=H=function(n,t,r){return B(n,t.slice().reverse(),r)},e.foldr1=J=function(n,t){return n=n.slice().reverse(),B(n[0],n.slice(1),t)},e.unfoldr=ft=e.unfold=ct=function(n,t){var r,e;for(r=[];null!=(e=t(n));)n=e[1],r.push(e[0]);return r},e.andList=i=function(n){var t,r,e;for(t=0,r=n.length;r>t;t++)if(e=n[t],!e)return!1;return!0},e.orList=Mn=function(n){var t,r,e;for(t=0,r=n.length;r>t;t++)if(e=n[t])return!0;return!1},e.any=c=function(n,t){var r,e,u;for(r=0,e=n.length;e>r;r++)if(u=n[r],t(u))return!0;return!1},e.all=l=function(n,t){var r,e,u;for(r=0,e=n.length;e>r;r++)if(u=n[r],!t(u))return!1;return!0},e.unique=at=function(n){var t,r,e,u,o;if(u=[],"[object Object]"===it.call(n))for(r in n)o=n[r],mt.call(u,o)<0&&u.push(o);else for(t=0,e=n.length;e>t;t++)o=n[t],mt.call(u,o)<0&&u.push(o);return"[object String]"===it.call(n)?u.join(""):u},e.sort=Kn=function(n){return n.slice().sort(function(n,t){return n>t?1:t>n?-1:0})},e.sortWith=Rn=function(n,t){return n.length?n.slice().sort(t):[]},e.sortBy=Qn=function(n,t){return Rn(n,j(t))},e.compare=j=function(n,t,r){return 3===arguments.length?r(n)>r(t)?1:r(n)<r(t)?-1:0:function(t,r){return n(t)>n(r)?1:n(t)<n(r)?-1:0}},e.sum=Zn=function(n){var t,r,e,u,o;if(u=0,"[object Object]"===it.call(n))for(r in n)o=n[r],u+=o;else for(t=0,e=n.length;e>t;t++)o=n[t],u+=o;return u},e.product=zn=function(n){var t,r,e,u,o;if(u=1,"[object Object]"===it.call(n))for(r in n)o=n[r],u*=o;else for(t=0,e=n.length;e>t;t++)o=n[t],u*=o;return u},e.mean=sn=e.average=p=function(n){return Zn(n)/rn(n)},e.median=hn=function(n){var t;return 0===n.length?void 0:(n=Kn(n),t=S(n.length,2),mn(n.length)?n[t]:(n[t-1]+n[t])/2)},e.concat=m=function(n){var t,r,e,u;if(!n.length)return[];for(t=0,r=n.length;r>t;t++)if(u=n[t],"[object String]"!==it.call(u))return(e=[]).concat.apply(e,n);return n.join("")},e.concatMap=M=function(n,t){return m(cn(n,t))},e.listToObj=un=function(n){var t,r,e,u;for(e={},t=0,r=n.length;r>t;t++)u=n[t],e[u[0]]=u[1];return e},e.maximum=an=function(n){return C(n,fn)},e.minimum=gn=function(n){return C(n,pn)},e.scan=Tn=e.scanl=Bn=function(n,t,r){var e,u;return nn=n,"[object Object]"===it.call(t)?[n].concat(function(){var n;n=[];for(e in t)u=t[e],n.push(nn=r(nn,u));return n}()):[n].concat(function(){var n,e,o;for(o=[],n=0,e=t.length;e>n;n++)u=t[n],o.push(nn=r(nn,u));return o}())},e.scan1=Un=e.scanl1=Cn=function(n,t){return Tn(n[0],n.slice(1),t)},e.scanr=Fn=function(n,t,r){return t=t.slice().reverse(),Tn(n,t,r).reverse()},e.scanr1=Gn=function(n,t){return n=n.slice().reverse(),Tn(n[0],n.slice(1),t).reverse()},e.replicate=Ln=function(n,t){var r,e;for(e=[],r=0;r++<n;)e.push(t);return e},e.take=nt=function(n,t){return 0>=n?"[object String]"===it.call(t)?"":[]:t.length?t.slice(0,n):t},e.drop=q=function(n,t){return 0>=n||!t.length?t:t.slice(n)},e.splitAt=Xn=function(n,t){return[nt(n,t),q(n,t)]},e.takeWhile=tt=function(n,t){var r,e,u,o;if(!n.length)return n;for(u=[],r=0,e=n.length;e>r&&(o=n[r],t(o));r++)u.push(o);return"[object String]"===it.call(n)?u.join(""):u},e.dropWhile=w=function(n,t){var r,e,u,o;if(!n.length)return n;for(r=0,e=0,u=n.length;u>e&&(o=n[e],t(o));e++)++r;return n.slice(r)},e.span=Vn=function(n,t){return[tt(n,t),w(n,t)]},e.breakIt=g=function(n,t){return Vn(n,function(n){return!t(n)})},e.elem=I=function(n,t){return null!=t?mt.call(t,n)>=0:function(t){return mt.call(t,n)>=0}},e.notElem=bn=function(n,t){return null!=t?!(mt.call(t,n)>=0):function(t){return!(mt.call(t,n)>=0)}},e.lookup=ln=function(n,t){return null!=t?t[n]:void 0},e.call=v=function(){var n,t,r,e;return r=arguments[0],n=3<=arguments.length?Mt.call(arguments,1,t=arguments.length-1):(t=1,[]),e=arguments[t++],null!=e&&"function"==typeof e[r]?e[r].apply(e,n):void 0},e.zip=vt=function(n,t){var r,e,u,o,l,i,c,f,a,s,h;for(a=[],c=[n,t],r=u=0,l=c.length;l>u;r=++u)for(h=c[r],e=o=0,i=h.length;i>o;e=++o)s=h[e],0===r&&a.push([]),null!=(f=a[e])&&f.push(s);return a},e.zipWith=bt=function(n,t,r){var e,u,o,l,i;if(n.length&&t.length){for(o=vt(n,t),l=[],e=0,u=o.length;u>e;e++)i=o[e],l.push(r.apply(null,i));return l}return[]},e.zipAll=dt=function(){var n,t,r,e,u,o,l,i,c,f,a;for(a=1<=arguments.length?Mt.call(arguments,0):[],i=[],n=r=0,u=a.length;u>r;n=++r)for(f=a[n],t=e=0,o=f.length;o>e;t=++e)c=f[t],0===n&&i.push([]),null!=(l=i[t])&&l.push(c);return i},e.zipAllWith=jt=function(){var n,t,r,e,u,o,l,i;if(i=2<=arguments.length?Mt.call(arguments,0,t=arguments.length-1):(t=0,[]),n=arguments[t++],i[0].length&&i[1].length){for(u=dt.apply(null,i),o=[],r=0,e=u.length;e>r;r++)l=u[r],o.push(n.apply(null,l));return o}return[]},e.compose=b=function(){var n;return n=1<=arguments.length?Mt.call(arguments,0):[],function(){var t,r,e,u;for(t=arguments,e=0,u=n.length;u>e;e++)r=n[e],t=[r.apply(this,t)];return t[0]}},e.curry=x=function(n){return function(){var t;return t=arguments,function(){var r;return r=1<=arguments.length?Mt.call(arguments,0):[],n.apply(null,Mt.call(t).concat(Mt.call(r)))}}},e.partial=yn=function(){var n,t;return n=arguments[0],t=2<=arguments.length?Mt.call(arguments,1):[],function(){var r;return r=1<=arguments.length?Mt.call(arguments,0):[],n.apply(null,t.concat(r))}},e.id=R=function(n){return n},e.flip=T=function(n,t,r){return 3===arguments.length?n(r,t):2===arguments.length?function(r){return n(r,t)}:function(t,r){return n(r,t)}},e.fix=D=function(n){return function(t,r){return function(){return n(t(t)).apply(null,arguments)}}(function(t,r){return function(){return n(t(t)).apply(null,arguments)}})},e.lines=en=function(n){return n.length?n.split("\n"):[]},e.unlines=st=function(n){return n.join("\n")},e.words=gt=function(n){return n.length?n.split(/[ ]+/):[]},e.unwords=ht=function(n){return n.join(" ")},e.max=fn=function(n,t){return n>t?n:t},e.min=pn=function(n,t){return t>n?n:t},e.negate=jn=function(n){return-n},e.abs=u=Math.abs,e.signum=Hn=function(n){return 0>n?-1:n>0?1:0},e.quot=Nn=function(n,t){return~~(n/t)},e.rem=En=function(n,t){return n%t},e.div=S=function(n,t){return Math.floor(n/t)},e.mod=dn=function(n,t){var r;return(r=n%t)<0&&t>0||r>0&&0>t?r+t:r},e.recip=_n=function(n){return 1/n},e.pi=qn=Math.PI,e.tau=et=2*qn,e.phi=Sn=1.618033988749895,e.exp=_=Math.exp,e.sqrt=Yn=Math.sqrt,e.ln=on=Math.log,e.pow=In=Math.pow,e.sin=Jn=Math.sin,e.tan=rt=Math.tan,e.cos=y=Math.cos,e.asin=a=Math.asin,e.acos=o=Math.acos,e.atan=s=Math.atan,e.atan2=h=Math.atan2,e.truncate=lt=function(n){return~~n},e.round=Dn=Math.round,e.ceil=d=Math.ceil,e.floor=U=Math.floor,e.isItNaN=Y=function(n){return n!==n},e.even=N=function(n){return n%2===0},e.odd=mn=function(n){return n%2!==0},e.gcd=K=function(n,t){var r;for(n=Math.abs(n),t=Math.abs(t);0!==t;)r=n%t,n=t,t=r;return n},e.lcm=tn=function(n,t){return Math.abs(Math.floor(n/K(n,t)*t))},e.plus=kn=function(n,t){return null!=t?n+t:function(t){return n+t}},e.minus=vn=function(n,t){return null!=t?n-t:function(t){return n-t}},e.times=ut=function(n,t){return null!=t?n*t:function(t){return n*t}},e.over=On=function(n,t){return null!=t?n/t:function(t){return n/t}},e.equals=z=function(n,t){return null!=t?n===t:function(t){return n===t}},e.extend=A=function(n,t,r){var e,u,o;null==r&&(r=[]),u=[];for(e in t)Ot.call(t,e)&&(o=t[e],mt.call(r,e)>=0||u.push(n[e]=o));return u},e.prelude=Wn=this,e.installPrelude=X=function(n,t){var r;return(null!=(r=n.prelude)?r.isInstalled:void 0)?void 0:(A(n,e,t),n.prelude.isInstalled=!0)},t.exports=e},{"./submodules/submodule.coffee":4}],4:[function(n,t,r){console.log("submodule_main")},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
